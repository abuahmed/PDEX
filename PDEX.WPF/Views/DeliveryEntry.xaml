<Window x:Class="PDEX.WPF.Views.DeliveryEntry"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:model="clr-namespace:PDEX.Core.Enumerations;assembly=PDEX.Core"
        xmlns:extensions="clr-namespace:PDEX.Core.Extensions;assembly=PDEX.Core"
        mc:Ignorable="d"
        Title="Delivery Entry" Height="500" Width="560" Name="WdwDeliveryEntry"
        WindowStartupLocation="CenterScreen" Margin="0,0,0,0" ResizeMode="NoResize"
        DataContext="{Binding DeliveryVm, Source={StaticResource Locator}}"
        Background="Transparent" WindowStyle="ThreeDBorderWindow" Closing="DeliveryEntry_OnClosing"
        Icon="/PDEX.WPF;component/Resources/pdexicon.ico" Loaded="WdwDeliveryEntry_Loaded">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/PDEX.WPF;component/Skins/MainSkin.xaml" />
                <ResourceDictionary Source="/PDEX.WPF;component/Skins/ControlsDictionary.xaml" />
                <ResourceDictionary Source="/PDEX.WPF;component/Skins/ListViewDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </Window.Resources>

    <Grid x:Name="LayoutRoot">
        <Border Style="{StaticResource mainBorder}" CornerRadius="0" 
                TextBlock.FontFamily="Bookman old style" TextBlock.Foreground="White">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid Grid.Row="1">
                    <Grid Margin="2,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="2"/>
                            <RowDefinition Height="40"/>
                        </Grid.RowDefinitions>

                        <Expander Grid.Row="0" Margin="5,0" Header="Delivery Header" 
                                  IsExpanded="True" TextBlock.Foreground="White">
                            <Grid>
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Order No.:" VerticalAlignment="Center"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" IsEnabled="False"
                                             Text="{Binding SelectedDelivery.Number}" VerticalAlignment="Center"/>

                                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Line No.:" VerticalAlignment="Center"/>
                                    <TextBox Grid.Row="0" Grid.Column="3" IsEnabled="False"
                                             Text="{Binding SelectedDeliveryLine.Number}" VerticalAlignment="Center"/>

                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Order By:" VerticalAlignment="Center"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" IsEnabled="False"
                                             Text="{Binding SelectedDelivery.OrderByClient.DisplayName}" VerticalAlignment="Center"/>

                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Address:" VerticalAlignment="Center"/>
                                    <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" IsEnabled="False"
                                             Text="{Binding SelectedDelivery.OrderByClient.Address.AddressDetail}" VerticalAlignment="Center"/>

                                    <TextBlock Grid.Row="3" Grid.Column="0" Text="No of Messages:" VerticalAlignment="Center"/>
                                    <TextBox Grid.Row="3" Grid.Column="1" IsEnabled="False"
                                             Text="{Binding SelectedDeliveryLine.CountMessages}" VerticalAlignment="Center"/>

                                </Grid>

                            </Grid>
                        </Expander>

                        <Expander Grid.Row="1" Margin="5,0" Header="Delivery Line Entry" IsExpanded="True"
                                  TextBlock.Foreground="White">
                            <Grid Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="By Staff:" VerticalAlignment="Center"/>
                                <ComboBox Grid.Row="0" Grid.Column="1"  VerticalContentAlignment="Center"
                                      ItemsSource="{Binding Staffs,Mode=OneWay}" 
                                      DisplayMemberPath="DisplayName" 
                                      SelectedItem="{Binding SelectedStaff}"/>

                                <!--<CheckBox Grid.Row="0" Grid.Column="3" Name="ChkDeliverDirectly" IsChecked="{Binding DeliverDirectly}"
                                          Foreground="White" Content="Deliver Directly" VerticalAlignment="Center"/>-->

                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Method:" VerticalAlignment="Center"/>
                                <ComboBox Grid.Column="1" Grid.Row="1" x:Name="CmbMethod"  Margin="0,2" SelectedIndex="0"
									            SelectedValue="{Binding SelectedDeliveryRoute.DeliveryMethod, Mode=TwoWay}" VerticalContentAlignment="Center"
									            ItemsSource="{Binding Mode=OneWay, Source={extensions:Enumeration {x:Type model:DeliveryMethods}}}" 
									            Validation.ErrorTemplate="{x:Null}" 
									            DisplayMemberPath="Description" 
									            SelectedValuePath="Value"/>

                                <TextBlock Grid.Row="1" Grid.Column="2" Visibility="{Binding VehicleVisibility}"
                                           Text=" Vehicle:" VerticalAlignment="Center"/>
                                <ComboBox Grid.Row="1" Grid.Column="3"  VerticalContentAlignment="Center"
                                      ItemsSource="{Binding Vehicles,Mode=OneWay}" Visibility="{Binding VehicleVisibility}" 
                                      DisplayMemberPath="PlateNumber" 
                                      SelectedItem="{Binding SelectedVehicle}"/>

                                <TextBlock Grid.Row="2" Grid.Column="0" Text="From Address:" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" IsEnabled="False"
                                             Text="{Binding SelectedDeliveryLine.FromAddress.AddressDetail}" VerticalAlignment="Center"/>

                                <TextBlock Grid.Row="3" Grid.Column="0" Text="Receiver:" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3" IsEnabled="False"
                                             Text="{Binding SelectedDeliveryLine.ToClient.DisplayNameShort}" VerticalAlignment="Center"/>

                                <TextBlock Grid.Row="4" Grid.Column="0" Text="To Address:" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="3" IsEnabled="False"
                                             Text="{Binding SelectedDeliveryLine.ToAddress.AddressDetail}" VerticalAlignment="Center"/>

                                <CheckBox Grid.Row="5" Grid.Column="1" Name="ChkStarted" Checked="ChkStarted_OnChecked" Unchecked="ChkStarted_OnChecked"
                                          Foreground="White" Content="Started" VerticalAlignment="Center" />
                                <TextBlock Grid.Row="5" Grid.Column="2" Text=" Time:" VerticalAlignment="Center"/>
                                <telerik:RadDateTimePicker Grid.Row="5" Grid.Column="3" x:Name="DtStartDate"                                         
									ToolTip="{Binding (Validation.Errors)[0].ErrorContent, ElementName=DtStartDate}" 
									SelectedValue="{Binding SelectedDeliveryRoute.AcceptedTime, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
									Validation.Error="Validation_Error"
                                    IsEnabled="True"
									VerticalAlignment="Center"/>
                                <CheckBox Grid.Row="6" Grid.Column="1" Name="ChkAccepted" Checked="ChkAccepted_OnChecked" Unchecked="ChkAccepted_OnChecked"
                                          Foreground="White" Content="Delivered" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="6" Grid.Column="2" Text=" Time:" VerticalAlignment="Center"/>
                                <telerik:RadDateTimePicker Grid.Row="6" Grid.Column="3" x:Name="DtEndDate"                                         
									ToolTip="{Binding (Validation.Errors)[0].ErrorContent, ElementName=DtEndDate}" 
									SelectedValue="{Binding SelectedDeliveryRoute.DeliveredTime, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
									Validation.Error="Validation_Error"
                                    IsEnabled="True"
									VerticalAlignment="Center"/>
                            </Grid>
                        </Expander>

                        <GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" />

                        <StackPanel Orientation="Horizontal" Grid.Row="3" 
                                    Background="Transparent" HorizontalAlignment="Right">

                            <Button Content="_Save" Tag="Save" x:Name="BtnSave"
                                    Command="{Binding SaveDeliveryLineViewCommand}" 
                                    CommandParameter="{Binding ElementName=WdwDeliveryEntry}" 
                                    Style="{StaticResource bottomButtons}" />

                            <Button Content="_Un Deliver" Tag="Reset" x:Name="BtnReset"
                                    Command="{Binding ResetDeliveryLineViewCommand}" 
                                    CommandParameter="{Binding ElementName=BtnReset}"                                     
                                    Style="{StaticResource bottomButtons}"/>

                            <Button Content="_Close" Tag="Close" x:Name="BtnClose"
                                    Command="{Binding CloseDeliveryLineViewCommand}" 
                                    CommandParameter="{Binding ElementName=WdwDeliveryEntry}"                                     
                                    Style="{StaticResource bottomButtons}"/>

                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>

